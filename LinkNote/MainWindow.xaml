<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:my="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon" xmlns:local="clr-namespace:Muscipular.LinkNote" x:Class="Muscipular.LinkNote.MainWindow"
        Title="记事本" Height="650" Width="1000" ResizeMode="CanResize" WindowStartupLocation="CenterScreen" Icon="/LinkNote;component/Book_JournalwPen.ico">
    <Window.Resources>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="256" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Border Grid.Column="1" Margin="-2,54,0,0" BorderThickness="1" BorderBrush="#E83CA6D4">
            <WindowsFormsHost Name="windowsFormsHost1" Margin="5,2,3,2"  AllowDrop="True" Cursor="None"/>
        </Border>
        <TreeView HorizontalAlignment="Stretch" x:Name="tvMenuTree" VerticalAlignment="Stretch" VerticalContentAlignment="Top"
                  ItemContainerStyle="{DynamicResource TreeViewItemStyle1}" BorderBrush="#E83CA6D4" BorderThickness="1"
                  ItemsSource="{Binding Path=Children}" TreeViewItem.Selected="tvMenuTree_Selected" 
                  PreviewMouseLeftButtonDown="tvMenuTree_MouseLeftButtonDown"
                  PreviewMouseLeftButtonUp="tvMenuTree_MouseLeftButtonUp"
                  DragEnter="treeView_DragCheck"
                  DragLeave="treeView_DragCheck"
                  DragOver="treeView_DragCheck"
                  Drop="tvMenuTree_Drop"
                  MouseMove="tvMenuTree_MouseMove"
                  AllowDrop="True"
                  >
            <!----><!--DataContext="{x:Static local:Node.BaseNode}"-->
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type local:Node}" ItemsSource="{Binding Path=Children}" >
                    <Grid>
                        <TextBlock Text="{Binding Path=Name}" FontSize="12" Loaded="TextBlock_Loaded"  IsEnabled="True" Height="18" VerticalAlignment="Center">
                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="添加" Command="ApplicationCommands.New"
                                              CommandParameter="{Binding Path=Header, RelativeSource={RelativeSource Self}}" />
                                    <MenuItem Header="删除" Command="ApplicationCommands.Delete"
                                              CommandParameter="{Binding Path=Header, RelativeSource={RelativeSource Self}}" />
                                    <!--<MenuItem Header="剪切" Command="ApplicationCommands.Cut"
                                              CommandParameter="{Binding Path=Header, RelativeSource={RelativeSource Self}}" />
                                    <MenuItem Header="复制" Command="ApplicationCommands.Copy"
                                              CommandParameter="{Binding Path=Header, RelativeSource={RelativeSource Self}}" />
                                    <MenuItem Header="粘贴" Command="ApplicationCommands.Paste" IsEnabled="{Binding}"
                                              CommandParameter="{Binding Path=Header, RelativeSource={RelativeSource Self}}" />-->
                                    <MenuItem Header="重命名" Command="ApplicationCommands.Replace"
                                              CommandParameter="{Binding Path=Header, RelativeSource={RelativeSource Self}}" />
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                    </Grid>
                </HierarchicalDataTemplate>
                <Style x:Key="TreeViewItemFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="Width" Value="16"/>
                    <Setter Property="Height" Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                                    <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="Transparent" Stroke="#FF989898">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                        <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="RenderTransform" TargetName="ExpandPath">
                                            <Setter.Value>
                                                <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                                        <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="TreeViewItemStyle1" TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="1,0,0,0"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                    <EventSetter Event="PreviewMouseRightButtonDown" Handler="TreeViewItem_PreviewMouseRightButtonDown"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19" Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Ellipse Name="Ellipse" Visibility="Collapsed" Fill="Black"  Width="5" Height="5" 
                                             HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3,0,0,0"/>
                                    <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                  Style="{StaticResource ExpandCollapseToggleStyle}" Checked="Expander_Checked" DataContext="{TemplateBinding DataContext}"/>
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" IsEnabled="True">
                                        </ContentPresenter>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="false">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="false">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                        <Setter Property="Visibility" TargetName="Ellipse" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="true"/>
                                            <Condition Property="IsSelectionActive" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel/>
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.Resources>
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="添加" Command="ApplicationCommands.New" 
                              CommandParameter="{Binding Path=Header, RelativeSource={RelativeSource Self}}" />
                    <!--<MenuItem Header="粘贴" Command="ApplicationCommands.Paste" IsEnabled="{Binding}"
                              CommandParameter="{Binding Path=Header, RelativeSource={RelativeSource Self}}" />-->
                </ContextMenu>
            </TreeView.ContextMenu>
        </TreeView>
        <Button Content="保存" Grid.Column="1" Height="28" HorizontalAlignment="Left" Margin="14,12,0,0" x:Name="btnSave" VerticalAlignment="Top" Width="103" Click="btnSave_Click" />
        <Button Content="重新载入" Height="28" HorizontalAlignment="Left" Margin="123,12,0,0" x:Name="btnReload" VerticalAlignment="Top" Width="103" Grid.Column="1"  Click="btnReload_Click"/>
        <Button Content="清空" Height="28" HorizontalAlignment="Left" Margin="232,12,0,0" x:Name="btnClear" VerticalAlignment="Top" Width="103" Grid.Column="1"  Click="btnClear_Click"/>
        <Button Content="加密保存" Grid.Column="1" Height="28" HorizontalAlignment="Left" Margin="341,12,0,0" Name="btnEncrypt" VerticalAlignment="Top" Width="96" Click="btnEncrypt_Click" />
        <!--<RichTextBox Grid.Column="1" HorizontalAlignment="Stretch" Margin="0,54,0,0" x:Name="richTextBox1" VerticalAlignment="Stretch" AcceptsTab="True"
                     IsReadOnly="{Binding IsChecked, ElementName=checkBox1, UpdateSourceTrigger=PropertyChanged}" 
                     Drop="richTextBox1_Drop" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoWordSelection="False">
            <RichTextBox.Resources>
                <Style TargetType="FlowDocument">
                    <Setter Property="LineHeight" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=FontSize}" />
                    <Setter Property="FontSize" Value="10pt"/>
                    <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                    <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                </Style>
                <Style TargetType="Paragraph">
                    <Setter Property="LineHeight" Value="{Binding RelativeSource={RelativeSource Mode=Self},Path=FontSize}" />
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="FontSize" Value="10pt"/>
                    <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                    <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                </Style>
            </RichTextBox.Resources>
            <FlowDocument/>
        </RichTextBox>-->
    </Grid>
</Window>
